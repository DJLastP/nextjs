{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisooyoon/workspace/nextprofile/profile/app/data/projects.js"],"sourcesContent":["   export const projects = [\n        {\n            name: '다모아 울산',\n            image: '/assets/damoa.png',\n            description: '',\n            stack: ['React', 'MySQL', 'Python', 'Spring', 'OpenSearch', 'OpenAI'],\n            role: '프론트엔드 전체 및 데이터 크롤링 서버',\n            environment: 'Azure + Nginx + MySQL',\n            period: '3개월',\n            features: [\n                '크롤링을 통한 울산시 데이터 정기수집 하여 포털형태로 제공',\n                'GPT 모델을 울산시 정보에 맞게 파인튜닝하여 LLM 서비스 구축.',\n                '공공기관 API 연동 하여 편의 정보 제공'\n            ],\n            link: 'https://www.ulsan.go.kr/damoa',\n        },\n       {\n           name: 'PG 정산시스템',\n           image: '/assets/ggpay.png',\n           stack: ['React', 'MariaDB', 'Express', 'Spring'],\n           role: '1인 개발 및 운영',\n           environment: 'Linux + Nginx + MySQL + Docker + Github Actions',\n           period: '3개월',\n           features: [\n               'PG의 카드결제 노티데이터 연동',\n               '가맹점과 영업점에 따른 수수료적용 및 시각화',\n               '다중 PG 연동 및 6종 수수료체계 적용',\n               '카드 수기결제'\n           ],\n       },\n       {\n           name: '사내업무웹',\n           image: '/assets/panffice.png',\n           stack: ['React', 'MariaDB', 'Spring'],\n           role: '1인 개발 및 운영',\n           environment: 'Linux + Nginx + MySQL + Docker + Github Actions',\n           period: '1개월',\n           features: [\n               '기존 구글시트로 진행하던 업무를 웹앱으로 전환',\n           ],\n       },\n       {\n           name: '카드개인결제 서비스',\n           image: '/assets/ggshop.png',\n           stack: ['React', 'MariaDB', 'Express', 'Spring'],\n           role: '1인 개발 및 운영',\n           environment: 'Linux + Nginx + MySQL + Docker + Github Actions',\n           period: '3개월',\n           features: [\n               'NICE API 본인인증 연동',\n               'PG 카드결제 모듈 연동',\n               'Github Action CI/CD',\n               '카드 결제 및 결제정보 시각화'\n           ],\n       },\n       {\n           name: '담배피는 호랑이',\n           image: '/assets/damho.png',\n           stack: ['VUE', 'MongoDB', 'Express', 'PWA'],\n           role: '1인 개발 및 운영',\n           environment: 'AWS + Nginx + MongoDB, 원스토어',\n           period: '1개월',\n           features: [\n               '상품 주문 및 영업점 납품거래처 관리 웹앱',\n               'PWA 적용 및 firebase push 알림',\n               '원스토어 배포'\n           ],\n       },\n       {\n           name: '한별투어 (과제)',\n           image: '/assets/tour.png',\n           stack: ['Spring', 'Thymeleaf', 'Python', 'Oracle', 'Tensorflow'],\n           role: '백엔드 프론트 머신러닝',\n           period: '2개월',\n           features: [\n               '개발자 양성과정 팀 프로젝트 과제',\n               '여행상품판매 쇼핑몰',\n               'logistic을 외부데이터로 학습하여 페이지에 등록된 리뷰에 대한 긍/부정 및 사용단어통계',\n           ],\n       },\n    ]"],"names":[],"mappings":";;;AAAU,MAAM,WAAW;IACnB;QACI,MAAM;QACN,OAAO;QACP,aAAa;QACb,OAAO;YAAC;YAAS;YAAS;YAAU;YAAU;YAAc;SAAS;QACrE,MAAM;QACN,aAAa;QACb,QAAQ;QACR,UAAU;YACN;YACA;YACA;SACH;QACD,MAAM;IACV;IACD;QACI,MAAM;QACN,OAAO;QACP,OAAO;YAAC;YAAS;YAAW;YAAW;SAAS;QAChD,MAAM;QACN,aAAa;QACb,QAAQ;QACR,UAAU;YACN;YACA;YACA;YACA;SACH;IACL;IACA;QACI,MAAM;QACN,OAAO;QACP,OAAO;YAAC;YAAS;YAAW;SAAS;QACrC,MAAM;QACN,aAAa;QACb,QAAQ;QACR,UAAU;YACN;SACH;IACL;IACA;QACI,MAAM;QACN,OAAO;QACP,OAAO;YAAC;YAAS;YAAW;YAAW;SAAS;QAChD,MAAM;QACN,aAAa;QACb,QAAQ;QACR,UAAU;YACN;YACA;YACA;YACA;SACH;IACL;IACA;QACI,MAAM;QACN,OAAO;QACP,OAAO;YAAC;YAAO;YAAW;YAAW;SAAM;QAC3C,MAAM;QACN,aAAa;QACb,QAAQ;QACR,UAAU;YACN;YACA;YACA;SACH;IACL;IACA;QACI,MAAM;QACN,OAAO;QACP,OAAO;YAAC;YAAU;YAAa;YAAU;YAAU;SAAa;QAChE,MAAM;QACN,QAAQ;QACR,UAAU;YACN;YACA;YACA;SACH;IACL;CACF","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisooyoon/workspace/nextprofile/profile/app/api/chat/route.js"],"sourcesContent":["import OpenAI from 'openai';\nimport { projects } from '../../data/projects';\n\nconst openai = new OpenAI({\n    apiKey: process.env.OPENROUTER_API_KEY,\n    baseURL: 'https://openrouter.ai/api/v1',\n});\n\nfunction formatProjectData(projects) {\n    return projects.map(p => {\n        return `📌 ${p.name}  \n🔹 기술 스택: ${p.stack.join(', ')}  \n🔹 역할: ${p.role}  \n🔹 기간: ${p.period}  \n🔹 주요 기능: ${p.features.join(', ')}  \n`;\n    }).join('\\n\\n');\n}\n\nexport async function POST(req) {\n    try {\n        const { messages } = await req.json();\n\n        const completion = await openai.chat.completions.create({\n            model: 'openai/gpt-3.5-turbo',\n            stream: true,\n            messages: [\n                {\n                    role: 'system',\n                    content: `당신은 개발자 윤지수의 AI 비서입니다. 다음 프로젝트에 대한 질문에만 답변하세요:\\n\\n${formatProjectData(projects)}\\n\\n다른 주제에는 응답하지 마세요.`,\n                },\n                ...messages,\n            ],\n        });\n\n        const encoder = new TextEncoder();\n        const stream = new ReadableStream({\n            async start(controller) {\n                for await (const chunk of completion) {\n                    const content = chunk.choices?.[0]?.delta?.content;\n                    if (content) {\n                        controller.enqueue(encoder.encode(content));\n                    }\n                }\n                controller.close();\n            },\n        });\n\n        return new Response(stream, {\n            headers: {\n                'Content-Type': 'text/plain; charset=utf-8',\n            },\n        });\n    } catch (err) {\n        console.error('[GPT API Error]', err);\n        return new Response('GPT 호출 오류: ' + err.message, { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAM,CAAC;IACtB,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;IACtC,SAAS;AACb;AAEA,SAAS,kBAAkB,QAAQ;IAC/B,OAAO,SAAS,GAAG,CAAC,CAAA;QAChB,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC;UAClB,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM;OACxB,EAAE,EAAE,IAAI,CAAC;OACT,EAAE,EAAE,MAAM,CAAC;UACR,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;AAClC,CAAC;IACG,GAAG,IAAI,CAAC;AACZ;AAEO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAEnC,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACpD,OAAO;YACP,QAAQ;YACR,UAAU;gBACN;oBACI,MAAM;oBACN,SAAS,CAAC,kDAAkD,EAAE,kBAAkB,yHAAA,CAAA,WAAQ,EAAE,qBAAqB,CAAC;gBACpH;mBACG;aACN;QACL;QAEA,MAAM,UAAU,IAAI;QACpB,MAAM,SAAS,IAAI,eAAe;YAC9B,MAAM,OAAM,UAAU;gBAClB,WAAW,MAAM,SAAS,WAAY;oBAClC,MAAM,UAAU,MAAM,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO;oBAC3C,IAAI,SAAS;wBACT,WAAW,OAAO,CAAC,QAAQ,MAAM,CAAC;oBACtC;gBACJ;gBACA,WAAW,KAAK;YACpB;QACJ;QAEA,OAAO,IAAI,SAAS,QAAQ;YACxB,SAAS;gBACL,gBAAgB;YACpB;QACJ;IACJ,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,IAAI,SAAS,gBAAgB,IAAI,OAAO,EAAE;YAAE,QAAQ;QAAI;IACnE;AACJ","debugId":null}}]
}