{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/jisooyoon/workspace/nextprofile/profile/app/api/chat/route.js"],"sourcesContent":["import OpenAI from 'openai';\nimport { projects } from '@/data/projects';\n\nconst openai = new OpenAI({\n    apiKey: process.env.OPENROUTER_API_KEY,\n    baseURL: 'https://openrouter.ai/api/v1',\n});\n\nfunction formatProjectData(projects) {\n    return projects.map(p => {\n        return `📌 ${p.name}  \n🔹 기술 스택: ${p.stack.join(', ')}  \n🔹 역할: ${p.role}  \n🔹 기간: ${p.period}  \n🔹 주요 기능: ${p.features.join(', ')}  \n`;\n    }).join('\\n\\n');\n}\n\nexport async function POST(req) {\n    try {\n        const { messages } = await req.json();\n\n        const completion = await openai.chat.completions.create({\n            model: 'openai/gpt-3.5-turbo',\n            stream: true,\n            messages: [\n                {\n                    role: 'system',\n                    content: `당신은 개발자 윤지수의 AI 비서입니다. 다음 프로젝트에 대한 질문에만 답변하세요:\\n\\n${formatProjectData(projects)}\\n\\n다른 주제에는 응답하지 마세요.`,\n                },\n                ...messages,\n            ],\n        });\n\n        const encoder = new TextEncoder();\n        const stream = new ReadableStream({\n            async start(controller) {\n                for await (const chunk of completion) {\n                    const content = chunk.choices?.[0]?.delta?.content;\n                    if (content) {\n                        controller.enqueue(encoder.encode(content));\n                    }\n                }\n                controller.close();\n            },\n        });\n\n        return new Response(stream, {\n            headers: {\n                'Content-Type': 'text/plain; charset=utf-8',\n            },\n        });\n    } catch (err) {\n        console.error('[GPT API Error]', err);\n        return new Response('GPT 호출 오류: ' + err.message, { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;;;;;;;AAGA,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAM,CAAC;IACtB,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;IACtC,SAAS;AACb;AAEA,SAAS,kBAAkB,SAAQ;IAC/B,OAAO,UAAS,GAAG,CAAC,CAAA;QAChB,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC;UAClB,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM;OACxB,EAAE,EAAE,IAAI,CAAC;OACT,EAAE,EAAE,MAAM,CAAC;UACR,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;AAClC,CAAC;IACG,GAAG,IAAI,CAAC;AACZ;AAEO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAEnC,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACpD,OAAO;YACP,QAAQ;YACR,UAAU;gBACN;oBACI,MAAM;oBACN,SAAS,CAAC,kDAAkD,EAAE,kBAAkB,UAAU,qBAAqB,CAAC;gBACpH;mBACG;aACN;QACL;QAEA,MAAM,UAAU,IAAI;QACpB,MAAM,SAAS,IAAI,eAAe;YAC9B,MAAM,OAAM,UAAU;gBAClB,WAAW,MAAM,SAAS,WAAY;oBAClC,MAAM,UAAU,MAAM,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO;oBAC3C,IAAI,SAAS;wBACT,WAAW,OAAO,CAAC,QAAQ,MAAM,CAAC;oBACtC;gBACJ;gBACA,WAAW,KAAK;YACpB;QACJ;QAEA,OAAO,IAAI,SAAS,QAAQ;YACxB,SAAS;gBACL,gBAAgB;YACpB;QACJ;IACJ,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,IAAI,SAAS,gBAAgB,IAAI,OAAO,EAAE;YAAE,QAAQ;QAAI;IACnE;AACJ","debugId":null}}]
}